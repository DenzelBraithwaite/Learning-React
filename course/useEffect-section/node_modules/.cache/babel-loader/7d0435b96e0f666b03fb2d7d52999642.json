{"ast":null,"code":"var _jsxFileName = \"/home/denzelbraithwaite/code/dotfiles/denzelbraithwaite/react/course/useEffect-section/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') ;\n  return {\n    value: action.val,\n    isValid: action.val\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  }); // useEffect(() => {\n  //     console.log('Effect RUNNING');\n  //     return () => {\n  //         console.log('EFFECT CLEAAAAANUP');\n  //     };\n  // }, []);\n  // useEffect(() => {\n  //     const identifier = setTimeout(() => {\n  //         console.log('checking validity!');\n  //         setFormIsValid(\n  //             enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //         );\n  //     }, 700);\n  //     return () => {\n  //         clearTimeout(identifier);\n  //         console.log('CLEAN up function was run');\n  //     };\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"neg328/gLPjT3vaRK/PJJviXPO4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","target","passwordChangeHandler","trim","length","validateEmailHandler","setEmailIsValid","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/home/denzelbraithwaite/code/dotfiles/denzelbraithwaite/react/course/useEffect-section/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT');\n    return { value: action.val, isValid: action.val };\n};\n\nconst Login = props => {\n    // const [enteredEmail, setEnteredEmail] = useState('');\n    // const [emailIsValid, setEmailIsValid] = useState();\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: '',\n        isValid: false,\n    });\n\n    // useEffect(() => {\n    //     console.log('Effect RUNNING');\n\n    //     return () => {\n    //         console.log('EFFECT CLEAAAAANUP');\n    //     };\n    // }, []);\n\n    // useEffect(() => {\n    //     const identifier = setTimeout(() => {\n    //         console.log('checking validity!');\n    //         setFormIsValid(\n    //             enteredEmail.includes('@') && enteredPassword.trim().length > 6\n    //         );\n    //     }, 700);\n\n    //     return () => {\n    //         clearTimeout(identifier);\n    //         console.log('CLEAN up function was run');\n    //     };\n    // }, [enteredEmail, enteredPassword]);\n\n    const emailChangeHandler = event => {\n        dispatchEmail({ type: 'USER_INPUT', val: event.target.value });\n    };\n\n    const passwordChangeHandler = event => {\n        setEnteredPassword(event.target.value);\n\n        setFormIsValid(\n            event.target.value.trim().length > 6 && emailState.isValid\n        );\n    };\n\n    const validateEmailHandler = () => {\n        setEmailIsValid(emailState.isValid);\n    };\n\n    const validatePasswordHandler = () => {\n        setPasswordIsValid(enteredPassword.trim().length > 6);\n    };\n\n    const submitHandler = event => {\n        event.preventDefault();\n        props.onLogin(emailState.value, enteredPassword);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${\n                        emailState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${\n                        passwordIsValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={enteredPassword}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button\n                        type=\"submit\"\n                        className={classes.btn}\n                        disabled={!formIsValid}\n                    >\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}